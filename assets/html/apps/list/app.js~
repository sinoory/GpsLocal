//<debug>
Ext.Loader.setPath({
    'Ext': '../../src'
});
//</debug>

Ext.application({
    startupImage: {
        '320x460': 'resources/startup/Default.jpg', // Non-retina iPhone, iPod touch, and all Android devices
        '640x920': 'resources/startup/640x920.png', // Retina iPhone and iPod touch
    },

    isIconPrecomposed: false,
    icon: {
        57: 'resources/icons/icon.png',
        72: 'resources/icons/icon@72.png',
   },

    requires: [
        'Ext.MessageBox',
        'Ext.data.Store',
        'Ext.List',
        'Ext.plugin.PullRefresh'
    ],

    launch: function() {
        //get the configuration for the list
        var listConfiguration = this.getListConfiguration();
        Ext.Viewport.add(listConfiguration);
        Ext.getStore();
        list=Ext.ComponentQuery.query("#list")[0];
        store=list.getStore().getAt(2).set('firstName','催');
        store=list.getStore().getAt(1).set('firstName','王');

    },

    /**
     * Returns a configuration object to be used when adding the list to the viewport.
     */
    getListConfiguration: function() {
        var store = Ext.create('Ext.data.Store', {
            //give the store some fields
            fields: ['firstName', 'lastName'],

            //filter the data using the firstName field
            sorters: 'firstName',

            //autoload the data from the server
            //autoLoad: true,

            //setup the grouping functionality to group by the first letter of the firstName field
/*            grouper: {
                groupFn: function(record) {
                    return record.get('firstName')[0];
                }
            },
*/
            data: [
                { firstName: 'Greg',    lastName: 'Barry' },
                { firstName: 'Seth', lastName: 'Lemmons' },
                { firstName: 'Mitch', lastName: 'Simoens' },
                { firstName: 'Fred', lastName: 'Mosby' }
            ],
        });

        return {
            //give it an xtype of list for the list component
            xtype: 'list',

            id: 'list',
/*
            scrollable: {
                indicators: false
            },
*/
            //set the itemtpl to show the fields for the store
            itemTpl: '{firstName}<br> {lastName}',

            //group the list
 //           grouped: true,

            //enable the indexBar
 //           indexBar: true,

            infinite: true,

            useSimpleItems: true,

            variableHeights: true,

            striped: true,

            ui: 'round',

            //set the function when a user taps on a disclsoure icon
             onItemDisclosure: function(record, item, index, e) {
                 //show a messagebox alert which shows the persons firstName
                 e.stopEvent();
                 Ext.Msg.alert('Disclose', 'Disclose more info for ' + record.get('firstName'));
             },
            //bind the store to this list
            store: store
        };
    }
});
